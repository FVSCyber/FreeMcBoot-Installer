name: Build [All]

on:
  workflow_dispatch:
  push:
    paths:
      - '1966/**.*'
      - '1965/**.*'
      - '.github/workflows/compile-core.yml'
  pull_request:
  repository_dispatch:
    types: [run_build]
    
    
jobs:
  build-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [1965, 1966]
    container: ps2dev/ps2dev:v1.0
    steps:
    - name: Install dependencies
      run: |
        apk add build-base git zip
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Compile
      run: |
        cd ${{ matrix.package }}
        make
        
    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"


    - name: copy installer For Release
      run: |
        cd ${{ matrix.package }}
        cp FMCBInstaller.elf __Package/
        SCH=${GITHUB_SHA::7}
        cd __Package
        cd lang
        echo $SCH >commit.txt
        cd ..
        cd ..
        cd ..
         
     - name: Download wLaunchELF_isr 
        run: |
         VER=${{ matrix.package }}
         wget https://github.com/israpps/wLaunchELF_ISR/releases/download/latest/BOOT.ELF -O $PWD/BOOT.ELF
         cp $PWD/BOOT.ELF $VER/__Package/BOOT
         cp $PWD/BOOT.ELF $VER/__Package/BOOT
    
    - name: zip Folder For Release
      run: |
        VER=${{ matrix.package }}
         cd $VER
         cd __Package
         cd INSTALL
         mkdir APPS-HDD
         cd ..
         cd ..
         DATEE=`date '+[%Y-%m-%d]'`
         mv __Package FMCBinst-$VER-$DATEE
         zip -r FMCB-$VER.zip FMCBinst*/*
        
    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: FMCBinstaller-${{ matrix.package }}-isra-${{ steps.slug.outputs.sha8 }}
        path: |
            ${{ matrix.package }}/*.zip

    - name: Create release
      if: github.ref == 'refs/heads/master'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-${{ matrix.package }}"
        title: "Latest release [${{ matrix.package }}]"
        files: |
               ${{ matrix.package }}/*.zip
               
