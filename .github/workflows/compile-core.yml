name: Build [All]

on:
  workflow_dispatch:
  push:
    paths:
      - '1966/**.*'
      - '1965/**.*'
      - '.github/workflows/compile-core.yml'
  pull_request:
  schedule:
    - cron: "0 15 * * 5,2"
  repository_dispatch:
    types: [run_build]
    
    
jobs:
  build-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [1965, 1966]
    container: ps2dev/ps2dev:v1.0
    steps:
    - name: Install dependencies
      run: |
        apk add build-base git zip
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Compile
      run: |
        cd ${{ matrix.package }}
        make
        
    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"


    - name: copy installer For Release
      run: |
        cd ${{ matrix.package }}
        cp FMCBInstaller.elf __Package/
        SCH=${GITHUB_SHA::7}
        cd __Package
        cd lang
        echo $SCH >commit.txt
        cd ..
        cd ..
        cd ..
         
    - name: Update wLaunchELF_ISR 
      run: |
         VER=${{ matrix.package }}
         wget https://github.com/israpps/wLaunchELF_ISR/releases/download/latest/BOOT.ELF -O $PWD/BOOT.ELF
         cp $PWD/BOOT.ELF $VER/__Package/INSTALL/BOOT/BOOT.ELF
         cp $PWD/BOOT.ELF $VER/__Package/INSTALL/BOOT-HDD/BOOT.ELF
    
      - name: Update wLaunchELF_ISR_HDD
        run: |
              wget https://github.com/israpps/wLaunchELF_ISR_HDD/releases/download/latest/ULE_ISR_HDD.ELF -O $PWD/ULE_ISR_HDD.ELF
              cp $PWD/ULE_ISR_HDD.ELF $VER/__Package/INSTALL/BOOT-HDD/ULE_ISR_HDD.ELF
    
    - name: zip Folder For Release
      run: |
        VER=${{ matrix.package }}
         cd $VER
         cd __Package
         cd INSTALL
         cd ..
         cd ..
         DATEE=`date '+[%Y-%m-%d]'`
         mv __Package FMCBinst-$VER-$DATEE
         zip -r FMCB-$VER.zip FMCBinst*/*
        
    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.package }}
        path: |
            ${{ matrix.package }}/*.zip

#    - name: Create release
#      if: github.ref == 'refs/heads/master'
#      uses: marvinpinto/action-automatic-releases@latest
#      with:
#        repo_token: "${{ secrets.GITHUB_TOKEN }}"
#        automatic_release_tag: "latest-${{ matrix.package }}"
#        title: "Latest release [${{ matrix.package }}]"
#        files: |
#               ${{ matrix.package }}/*.zip
 
  Release-packages:
    needs: build-packages
    runs-on: ubuntu-latest     
    steps:

      - name: Download 1.965 artifact
        uses: actions/download-artifact@v1
        with:
          name: 1965

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: 1965
          path: |
              1965/*.zip

      - name: Create release
        if: github.ref == 'refs/heads/master'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-1965"
          title: "FreeMcBoot [1.965]"
          files: |
                 1965/*.zip

      - name: Download 1.966 artifact
        uses: actions/download-artifact@v1
        with:
          name: 1966

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: 1966
          path: |
              1966/*.zip

      - name: Create release
        if: github.ref == 'refs/heads/master'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-1966"
          title: "FreeMcBoot [1.966]"
          files: |
                 1966/*.zip
